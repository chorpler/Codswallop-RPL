- Move >STR from python to sysrpl (and consolidate with DISP?)
- Think about whether a special 'ROM' store could be used to bootstrap an 
  RPL-side parser
- Actually make a STOTO/RCLFROM that can work with unlinked directories maybe

crashes on store dir - Allow storing to firstobj (null store, anonymous local)

no, that's dumb - Type compatibility/inheritance scheme

done - Figure out how to do user types
done - Catch attempts to store tag into itself
done - Improve Python-side tail calling to safely catch a bunch of dumb ways to crash
done - Implement HOOK
done - STOTO/RCLFROM for updating tag types (as STO/RCL)
done - Tag parser
done - Tags in LOCAL arglists for constants
done - Store symbols as already-split lists of strings
done - Tag/tuple type: ('symbol': value) or (car, cdr)

Named store (car, cdr ->) (car, cdr ->) (nil, nil)
              |             |
              v             v
        ('sym':value) ('sym':value)

Named store will effectively work with a universal symbol find function,
which will (if successful) return a tuple which can be modified
